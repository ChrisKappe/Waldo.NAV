OBJECT Codeunit 82102 WaldoNAVPad SaveTexts Meth
{
  OBJECT-PROPERTIES
  {
    Date=16/09/16;
    Time=10:37:50;
    Modified=Yes;
    Version List=WaldoNAVPad;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE SaveTexts@1(VAR WaldoNAVPadTextClass@1001 : Codeunit 82110;VAR RecRef@1003 : RecordRef);
    VAR
      Handled@1000 : Boolean;
    BEGIN
      OnBeforeSaveTexts(Handled);

      DoSaveTexts(WaldoNAVPadTextClass,RecRef,Handled);

      OnAfterSaveTexts();
    END;

    LOCAL PROCEDURE DoSaveTexts@2(VAR WaldoNAVPadTextClass@1005 : Codeunit 82110;VAR RecRef@1004 : RecordRef;VAR Handled@1000 : Boolean);
    VAR
      OldBlobText@1003 : Text;
    BEGIN
      IF Handled THEN EXIT;

      IF NOT WaldoNAVPadTextClass.GetTextIsUpdated THEN EXIT;

      UpdateTextForRecord(WaldoNAVPadTextClass,RecRef);
    END;

    LOCAL PROCEDURE UpdateTextForRecord@1100084012(VAR WaldoNAVPadTextClass@1100084002 : Codeunit 82110;VAR RecRef@1100084003 : RecordRef);
    BEGIN
      SaveTextToBlob(WaldoNAVPadTextClass.GetHTML,RecRef);;
      SaveTextToRecords(WaldoNAVPadTextClass,RecRef);
    END;

    LOCAL PROCEDURE FilterWNPTexts@1100084005(VAR WaldoNAVPadTextstore@1100084002 : Record 82101;VAR RecRef@1100084001 : RecordRef);
    BEGIN
      WITH WaldoNAVPadTextstore DO BEGIN
        SETRANGE("Record ID", RecRef.RECORDID);
      END;
    END;

    LOCAL PROCEDURE SaveTextToBlob@1100084024(Text@1100084002 : Text;VAR RecRef@1100084000 : RecordRef);
    BEGIN
      DeleteWNPBlobForRecord(RecRef);
      InsertWPNBlobForRecord(Text,RecRef);
    END;

    LOCAL PROCEDURE DeleteWNPBlobForRecord@1100084019(VAR RecRef@1100084000 : RecordRef);
    VAR
      WaldoNavPadBlobstore@1100084001 : Record 82100;
    BEGIN
      WITH WaldoNavPadBlobstore DO BEGIN
        SETRANGE("Record ID", RecRef.RECORDID);
        DELETEALL(FALSE);
      END;
    END;

    LOCAL PROCEDURE InsertWPNBlobForRecord@1100084018(VAR Text@1100084001 : Text;VAR RecRef@1100084000 : RecordRef);
    VAR
      WaldoNavPadBlobstore@1100084004 : Record 82100;
      TempBlob@1100084002 : Record 99008535;
    BEGIN
      WITH WaldoNavPadBlobstore DO BEGIN
        GetBlobFromText(Text,TempBlob);
        INIT;
        "Record ID" := RecRef.RECORDID;
        Blob := TempBlob.Blob;
        TableNo := RecRef.NUMBER;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE SaveTextToRecords@1100084025(VAR WaldoNAVPadTextClass@1100084003 : Codeunit 82110;VAR RecRef@1100084000 : RecordRef);
    BEGIN
      DeleteWNPTextForRecord(RecRef);
      InsertWPNTextForRecord(WaldoNAVPadTextClass,RecRef);
    END;

    LOCAL PROCEDURE DeleteWNPTextForRecord@1100084003(VAR RecRef@1100084000 : RecordRef);
    VAR
      WaldoNAVPadTextstore@1100084001 : Record 82101;
    BEGIN
      FilterWNPTexts(WaldoNAVPadTextstore, RecRef);
      WaldoNAVPadTextstore.DELETEALL(FALSE);
    END;

    LOCAL PROCEDURE InsertWPNTextForRecord@1100084016(VAR WaldoNAVPadTextClass@1100084002 : Codeunit 82110;VAR RecRef@1100084000 : RecordRef);
    BEGIN
      WITH WaldoNAVPadTextClass DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            InsertWPNText(GetCurrentTextLine, RecRef);
          UNTIL NEXT < 1;
      END;
    END;

    LOCAL PROCEDURE InsertWPNText@1100084020(pTextline@1100084000 : Text;VAR RecRef@1100084002 : RecordRef);
    VAR
      WaldoNAVPadTextstore@1100084001 : Record 82101;
    BEGIN
      WITH WaldoNAVPadTextstore DO BEGIN
        INIT;

        Textline := pTextline;
        "Record ID" := RecRef.RECORDID;
        TableNo := RecRef.NUMBER;

        INSERT;
      END;
    END;

    LOCAL PROCEDURE GetBlobFromText@1100084010(Text@1100084001 : Text;VAR TempBlob@1100084000 : Record 99008535);
    VAR
      WriteStream@1100084002 : OutStream;
      TextBigText@1100084003 : BigText;
    BEGIN
      TempBlob.Blob.CREATEOUTSTREAM(WriteStream);
      TextBigText.ADDTEXT(Text);
      TextBigText.WRITE(WriteStream);
    END;

    LOCAL PROCEDURE OnBeforeSaveTexts@5(VAR Handled@1000 : Boolean);
    BEGIN
    END;

    LOCAL PROCEDURE OnAfterSaveTexts@6();
    BEGIN
    END;

    BEGIN
    END.
  }
}

