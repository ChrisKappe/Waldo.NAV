OBJECT Codeunit 82111 WaldoNAVPad Text Parse Meth
{
  OBJECT-PROPERTIES
  {
    Date=15/09/16;
    Time=21:56:54;
    Modified=Yes;
    Version List=WaldoNAVPad;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ParseText@1100084001(VAR Text@1100084000 : Text;MaxLength@1100084003 : Integer;VAR ResultWaldoNAVPadTextBuffer@1100084002 : Record 82110);
    VAR
      Handled@1100084001 : Boolean;
    BEGIN
      OnBeforeParseText(Text,Handled);
      DoParseText(Text,MaxLength,ResultWaldoNAVPadTextBuffer,Handled);
      OnAfterParseText(Text);
    END;

    LOCAL PROCEDURE DoParseText@1100084003(VAR Text@1100084001 : Text;MaxLength@1100084007 : Integer;VAR ResultWaldoNAVPadTextBuffer@1100084009 : Record 82110;VAR Handled@1100084000 : Boolean);
    VAR
      SystemString@1100084003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      LineArray@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      SystemIOStringReader@1100084005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StringReader";
      Line@1100084006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      LineNo@1100084008 : Integer;
    BEGIN
      IF Handled THEN EXIT;

      SystemString := Text;

      ResultWaldoNAVPadTextBuffer.DELETEALL(FALSE);

      SystemIOStringReader := SystemIOStringReader.StringReader(Text);
      Line := SystemIOStringReader.ReadLine;
      WHILE NOT ISNULL(Line) DO BEGIN
        ProcessLine(LineNo,Line,MaxLength,ResultWaldoNAVPadTextBuffer);

        Line := SystemIOStringReader.ReadLine;
      END;
    END;

    LOCAL PROCEDURE ProcessLine@1100084031(VAR LineNo@1100084006 : Integer;VAR Line@1100084000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";MaxLength@1100084002 : Integer;VAR ResultWaldoNAVPadTextBuffer@1100084007 : Record 82110);
    VAR
      SubString@1100084003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      SpaceIndex@1100084001 : Integer;
      ResultString@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
    BEGIN
      WHILE STRLEN(Line) > MaxLength DO BEGIN
        SubString := COPYSTR(Line,1,MaxLength);
        SpaceIndex := SubString.LastIndexOf(' ');
        IF SpaceIndex = -1 THEN //No Space Found
          SpaceIndex := MaxLength;
        IF SpaceIndex = 0 THEN //First Character is a space
          SpaceIndex := MaxLength;
        ResultString := SubString;
        IF SpaceIndex < SubString.Length THEN BEGIN
          ResultString := SubString.Substring(0,SpaceIndex);
          AddToBuffer(LineNo,ResultString,ResultWaldoNAVPadTextBuffer.Separator::" ", ResultWaldoNAVPadTextBuffer);
        END ELSE BEGIN
          AddToBuffer(LineNo,ResultString,ResultWaldoNAVPadTextBuffer.Separator::Space, ResultWaldoNAVPadTextBuffer);
        END;

        Line := Line.Remove(0,ResultString.Length);
      END;

      AddToBuffer(LineNo,Line,ResultWaldoNAVPadTextBuffer.Separator::"Carriage Return",ResultWaldoNAVPadTextBuffer);
    END;

    LOCAL PROCEDURE AddToBuffer@1100084041(VAR LineNo@1100084003 : Integer;VAR Line@1100084000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";pSeparator@1100084002 : Integer;VAR ResultWaldoNAVPadTextBuffer@1100084004 : Record 82110);
    BEGIN
      LineNo += 1;

      WITH ResultWaldoNAVPadTextBuffer DO BEGIN
        INIT;
        "Line No." := LineNo;
        Textline := Line;
        Separator := pSeparator;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE "--- Event Wrapper"@1100084011();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeParseText@1100084004(VAR Text@1100084000 : Text;VAR Handled@1100084001 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterParseText@1100084005(VAR Text@1100084000 : Text);
    BEGIN
    END;

    BEGIN
    END.
  }
}

